function [y1] = NeuralNetwork_1(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 12:41:45.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 10xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [3.15637247878184e-05;0.141832288234669;0.186836711455249;0.0111719328600825;10.5333772151099;21.0667544302198;31.6001316453297;31.6001316453297;63.2002632906593;42.1335088604396];
x1_step1_gain = [364.458801003824;0.122771185795241;7.8929695306333;2.1513448041071;0.353075131561216;0.176537565780607;0.117691710520405;0.117691710520405;0.0588458552602026;0.0882687828903038];
x1_step1_ymin = -1;

% Layer 1
b1 = [1.9349098434153406689;1.4546140399747800043;-0.93028179377208697343;0.81644095856764142827;-0.41556415940038277101;0.61949937694202716898;0.20342129926473737078;-1.1385459090459761899;-1.1704261870338847906;-1.4839728281955997247];
IW1_1 = [0.68211923390110018595 -1.019562321362472046 0.26656114713551420925 -0.028970252362011360281 -0.57689339763907343528 -0.91340541113576256826 -0.81739628531291341762 0.11140178797915141484 0.096301088074615640022 -0.27487930679726518823;-0.31836653661738967269 0.29550541407446273556 -0.37219792134442525322 -0.56094307305532831176 0.35197955362632638021 1.0723900664881254041 -0.36599911822426717256 -0.8201035604484079311 0.67017750831840117165 0.37756677544928679557;0.79409815890914936531 -0.97387144974842676515 0.16780218724573564559 1.6426169187592629672 -0.38957980343830561631 -0.58943591288555197139 -0.88029674704345928227 0.62804149793025842996 0.3986234973037119933 0.46441841902489316984;-0.95398718736043730537 0.1758317648946162437 0.19499533929988302483 0.48735359081711010498 -0.64920439348423164549 -0.71841461644535431486 -0.018613159368159631901 -0.3027920386883036219 0.45003354631242570294 -0.69898132536836854456;1.3501508981836587431 -0.38290827250592412989 -0.60013091688613739993 -0.037661366765093011455 -0.65996687852458035817 -0.47747322778286582778 0.39692725739074097291 -0.50326632133312121375 -0.51481321974807403574 -0.82310256065266129699;0.071087531555377794779 0.49957211844693705238 -0.57475099058774781202 0.71910529526049415949 1.0042685100652726238 0.13440791450783989847 0.48127936273346394458 0.70968986613938100927 0.60309596967087220065 0.31968851140549958689;0.09137637390735933729 0.51598084919587239305 -0.57962946026569450719 -1.3627727495169237315 -0.77346392422705123604 -0.72166817533863081291 -0.74185699201310673079 -0.87822624255224002177 0.05827078368207608966 -0.064188815737365748082;-0.89500850346806548608 0.10241719262130252743 -1.1846013467995206714 -0.081250953714888274337 -0.46516434798131817141 0.75785944858038700733 -0.7277082877637206515 -0.78036368967513902728 -0.21494952480096171654 0.5874359689027991438;-0.24419537131779578409 1.1182327164469392233 -0.44472905395292472441 0.71576187531510648832 -0.8201038470174195627 -0.30939019725803978966 0.50739604008125704926 0.30680042443306765332 -0.8057253353434632448 0.54724884946641638717;-1.9064681558701734865 -0.25481838730849637464 -0.50906439505521539068 -0.25896949580789896395 -0.18875918584148965174 -0.5100640577885027227 0.84255860031726237391 0.17120387890641219908 0.56446380013962049738 0.46245994366400239306];

% Layer 2
b2 = 0.38413451219847477569;
LW2_1 = [-0.50233555621492553822 -0.68322627977845229452 -1.3877457564039652471 0.34286751619153876813 1.3321190919016374643 0.38084983273640837798 -1.3719934476292658942 1.1929596064836223146 -1.1012535567155274929 -0.87238028488168817276];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 2;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
